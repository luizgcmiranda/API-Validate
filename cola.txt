(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
poetry init
poetry shell (ativar .venv), para sair é exit.
ignr -p python > .gitignore (npm install -g ignr)
poetry add fastapi uvicorn

(adicionar no pyproject.toml)
poetry add taskipy --dev

[tool.taskipy.tasks]
run = "uvicorn main:app --reload"
test = "pytest -v"
kill = "kill -9 $(lsof -t -i:8000)"

poetry add pytest
poetry add httpx (necessário para usar o TestClient do pytest)

criar pasta gitub - workflows - main.yml

adicionar run: pytest -v test.py

pip freeze >> requirements-dev.txt
pip freeze >> requirements.txt

git checkout -B produtos
https://github.com/luizgcmiranda/API-Validate/pull/1 (Aprovar o request pelo github e realizar o merge, depois deleta a branch)
git checkout main


git checkout -B pegaproduto (criar branch para cada card no jira para ter rastreabilidade)

https://render.com/


poetry add pydantic

docker pull postgres

Criar dockerfile.

docker build -t minha_imagem_postgres .

docker run --name meu_container_postgres -p 5432:5432 -v meu_volume_postgres:/var/lib/postgresql/data -d minha_imagem_postgres


*SQL*

poetry add python-dotenv
poetry add sqlalchemy psycopg2-binary